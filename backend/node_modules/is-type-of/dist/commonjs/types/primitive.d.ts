type Primitive = string | number | bigint | boolean | symbol | null | undefined;
type Nullable = null | undefined;
/**
 * returns true if val is string, not `String` object
 */
export declare function isString(val?: unknown): val is string;
/**
 * returns true if val is number, not `Number` object
 */
export declare function isNumber(val?: unknown): val is number;
/**
 * returns true if val is boolean, not `Boolean` object
 */
export declare function isBoolean(val?: unknown): val is boolean;
/**
 * returns true if val is bigint
 */
export declare function isBigInt(val?: unknown): val is bigint;
/**
 * returns true if val is symbol
 */
export declare function isSymbol(val?: unknown): val is symbol;
/**
 * returns true if val is undefined
 */
export declare function isUndefined(val?: unknown): val is undefined;
/**
 * returns true if val is null
 */
export declare function isNull(val?: unknown): val is null;
/**
 * returns true if val is null or undefined
 */
export declare function isNullable(val?: unknown): val is Nullable;
/**
 * returns true if val is primitive
 */
export declare function isPrimitive(val?: unknown): val is Primitive;
/**
 * returns true if val is integer
 */
export declare function isInteger(val?: unknown): val is number;
/**
 * returns true if val is integer, and between -2 ** 31 and 2 ** 31 - 1
 */
export declare function isInteger32(val?: unknown): val is number;
/**
 * returns true if val is integer, and < -2 ** 31, and > 2 ** 31 - 1
 */
export declare function isLong(val?: unknown): val is number;
/**
 * returns true if val is integer, and between -(2 ** 53 - 1) and 2 ** 53 - 1
 * @see {Number.isSafeInteger}
 */
export declare function isSafeInteger(val?: unknown): val is number;
/**
 * returns true if val is Double
 */
export declare function isDouble(val?: unknown): val is number;
/**
 * returns true if val is NaN
 * @see {Number.isNaN}
 */
export declare function isNaN(val?: unknown): boolean;
/**
 * returns true if val is finite
 * @see {Number.isFinite}
 */
export declare function isFinite(val?: unknown): val is number;
export {};
