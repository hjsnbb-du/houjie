{"version":3,"file":"index.umd.min.js","sources":["../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/callSuper.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../../../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js","../../../node_modules/.pnpm/@antv+util@3.3.10/node_modules/@antv/util/esm/lodash/is-nil.js","../src/CanvasRendererPlugin.ts","../src/shapes/styles/helper.ts","../src/shapes/styles/OptimizedDefault.ts","../src/shapes/styles/Default.ts","../src/shapes/styles/Image.ts","../src/utils/math.ts","../src/shapes/styles/Text.ts","../src/index.ts"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nfunction _callSuper(t, o, e) {\n  return o = getPrototypeOf(o), possibleConstructorReturn(t, isNativeReflectConstruct() ? Reflect.construct(o, e || [], getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nexport { _callSuper as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","function _classPrivateFieldBase(e, t) {\n  if (!{}.hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n  return e;\n}\nexport { _classPrivateFieldBase as default };","var id = 0;\nfunction _classPrivateFieldKey(e) {\n  return \"__private_\" + id++ + \"_\" + e;\n}\nexport { _classPrivateFieldKey as default };","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","/**\n * 判断值是否为 null 或 undefined\n * @return 是否为 null 或 undefined\n */\nexport default function isNil(value) {\n    return value === null || value === undefined;\n}\n//# sourceMappingURL=is-nil.js.map","import type {\n  DisplayObject,\n  FederatedEvent,\n  RBushNodeAABB,\n  RenderingPlugin,\n  RBush,\n  RenderingPluginContext,\n  ContextService,\n  CanvasContext,\n  GlobalRuntime,\n  CSSRGB,\n  ParsedBaseStyleProps,\n} from '@antv/g-lite';\nimport {\n  AABB,\n  CanvasEvent,\n  CustomEvent,\n  ElementEvent,\n  Shape,\n  Node,\n} from '@antv/g-lite';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { isNil } from '@antv/util';\nimport type { CanvasRendererPluginOptions } from './interfaces';\nimport type { Plugin } from '.';\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface RenderState {\n  restoreStack: DisplayObject[];\n  prevObject: DisplayObject;\n  currentContext: Map<keyof CanvasRenderingContext2D | 'lineDash', unknown>;\n}\n\n/**\n * support 2 modes in rendering:\n * * immediate\n * * delayed: render at the end of frame with dirty-rectangle\n */\nexport class CanvasRendererPlugin implements RenderingPlugin {\n  static tag = 'CanvasRenderer';\n\n  private context: Plugin['context'];\n\n  private pathGeneratorFactory: Plugin['context']['pathGeneratorFactory'];\n\n  /**\n   * RBush used in dirty rectangle rendering\n   */\n  private rBush: RBush<RBushNodeAABB>;\n\n  constructor(\n    private canvasRendererPluginOptions: CanvasRendererPluginOptions, // private styleRendererFactory: Record<Shape, StyleRenderer>,\n  ) {}\n\n  private removedRBushNodeAABBs: RBushNodeAABB[] = [];\n\n  private renderQueue: DisplayObject[] = [];\n\n  #renderState: RenderState = {\n    restoreStack: [],\n    prevObject: null,\n    currentContext: new Map(),\n  };\n\n  private clearFullScreenLastFrame = false;\n  private clearFullScreen = false;\n\n  /**\n   * view projection matrix\n   */\n  private vpMatrix = mat4.create();\n  private dprMatrix = mat4.create();\n  private tmpMat4 = mat4.create();\n  private vec3a = vec3.create();\n  private vec3b = vec3.create();\n  private vec3c = vec3.create();\n  private vec3d = vec3.create();\n\n  apply(context: RenderingPluginContext, runtime: GlobalRuntime) {\n    this.context = context as unknown as Plugin['context'];\n\n    const {\n      config,\n      camera,\n      renderingService,\n      renderingContext,\n      rBushRoot,\n      // @ts-ignore\n      pathGeneratorFactory,\n    } = this.context;\n    let enableRenderingOptimization =\n      config.renderer.getConfig().enableRenderingOptimization;\n\n    config.renderer.getConfig().enableDirtyCheck = false;\n    config.renderer.getConfig().enableDirtyRectangleRendering = false;\n\n    this.rBush = rBushRoot;\n    this.pathGeneratorFactory = pathGeneratorFactory;\n\n    const contextService =\n      context.contextService as ContextService<CanvasRenderingContext2D>;\n\n    const canvas = renderingContext.root.ownerDocument.defaultView;\n\n    const handleUnmounted = (e: FederatedEvent) => {\n      const object = e.target as DisplayObject;\n\n      // remove r-bush node\n      // @ts-ignore\n      const { rBushNode } = object;\n\n      if (rBushNode.aabb) {\n        // save removed aabbs for dirty-rectangle rendering later\n        this.removedRBushNodeAABBs.push(rBushNode.aabb);\n      }\n    };\n\n    const handleCulled = (e: FederatedEvent) => {\n      const object = e.target as DisplayObject;\n      // @ts-ignore\n      const { rBushNode } = object;\n\n      if (rBushNode.aabb) {\n        // save removed aabbs for dirty-rectangle rendering later\n        this.removedRBushNodeAABBs.push(rBushNode.aabb);\n      }\n    };\n\n    renderingService.hooks.init.tap(CanvasRendererPlugin.tag, () => {\n      canvas.addEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n      canvas.addEventListener(ElementEvent.CULLED, handleCulled);\n\n      // clear fullscreen\n      const dpr = contextService.getDPR();\n      const { width, height } = config;\n      const context = contextService.getContext();\n      this.clearRect(\n        context,\n        0,\n        0,\n        width * dpr,\n        height * dpr,\n        config.background,\n      );\n    });\n\n    renderingService.hooks.destroy.tap(CanvasRendererPlugin.tag, () => {\n      canvas.removeEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n      canvas.removeEventListener(ElementEvent.CULLED, handleCulled);\n      this.renderQueue = [];\n      this.removedRBushNodeAABBs = [];\n      this.#renderState = {\n        restoreStack: [],\n        prevObject: null,\n        currentContext: null,\n      };\n    });\n\n    renderingService.hooks.beginFrame.tap(CanvasRendererPlugin.tag, () => {\n      const context = contextService.getContext();\n      const dpr = contextService.getDPR();\n      const { width, height } = config;\n      const { dirtyObjectNumThreshold, dirtyObjectRatioThreshold } =\n        this.canvasRendererPluginOptions;\n\n      // some heuristic conditions such as 80% object changed\n      const { total, rendered } = renderingService.getStats();\n      const ratio = rendered / total;\n\n      this.clearFullScreen =\n        this.clearFullScreenLastFrame ||\n        // @ts-ignore\n        !canvas.context.renderingPlugins[1]?.isFirstTimeRenderingFinished ||\n        renderingService.disableDirtyRectangleRendering() ||\n        (rendered > dirtyObjectNumThreshold &&\n          ratio > dirtyObjectRatioThreshold);\n\n      if (context) {\n        if (typeof context.resetTransform === 'function') {\n          context.resetTransform();\n        } else {\n          context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n\n        if (this.clearFullScreen) {\n          this.clearRect(\n            context,\n            0,\n            0,\n            width * dpr,\n            height * dpr,\n            config.background,\n          );\n        }\n      }\n    });\n\n    /**\n     * render objects by z-index\n     *\n     * - The level of the child node will be affected by the level of the parent node\n     */\n    const renderByZIndex = (\n      object: DisplayObject,\n      context: CanvasRenderingContext2D,\n    ) => {\n      const stack = [object];\n\n      while (stack.length > 0) {\n        const currentObject = stack.pop();\n\n        if (currentObject.isVisible() && !currentObject.isCulled()) {\n          if (enableRenderingOptimization) {\n            this.renderDisplayObjectOptimized(\n              currentObject,\n              context,\n              this.context,\n              this.#renderState,\n              runtime,\n            );\n          } else {\n            this.renderDisplayObject(\n              currentObject,\n              context,\n              this.context,\n              this.#renderState,\n              runtime,\n            );\n          }\n        }\n\n        const objects =\n          currentObject.sortable.sorted || currentObject.childNodes;\n        // should account for z-index\n        for (let i = objects.length - 1; i >= 0; i--) {\n          stack.push(objects[i] as unknown as DisplayObject);\n        }\n      }\n    };\n\n    // render at the end of frame\n    renderingService.hooks.endFrame.tap(CanvasRendererPlugin.tag, () => {\n      // Skip rendering.\n      if (renderingContext.root.childNodes.length === 0) {\n        this.clearFullScreenLastFrame = true;\n        return;\n      }\n\n      enableRenderingOptimization =\n        config.renderer.getConfig().enableRenderingOptimization;\n\n      // init\n      this.#renderState = {\n        restoreStack: [],\n        prevObject: null,\n        currentContext: this.#renderState.currentContext,\n      };\n      this.#renderState.currentContext.clear();\n      this.clearFullScreenLastFrame = false;\n\n      const context = contextService.getContext();\n      // clear & clip dirty rectangle\n      const dpr = contextService.getDPR();\n      mat4.fromScaling(this.dprMatrix, [dpr, dpr, 1]);\n      mat4.multiply(this.vpMatrix, this.dprMatrix, camera.getOrthoMatrix());\n\n      if (this.clearFullScreen) {\n        // console.time('renderByZIndex');\n        if (enableRenderingOptimization) {\n          context.save();\n          renderByZIndex(renderingContext.root, context);\n          context.restore();\n        } else {\n          renderByZIndex(renderingContext.root, context);\n        }\n        // console.timeEnd('renderByZIndex');\n\n        this.removedRBushNodeAABBs = [];\n      } else {\n        // console.log('canvas renderer next...', this.renderQueue);\n        // merge removed AABB\n        const dirtyRenderBounds = this.safeMergeAABB(\n          this.mergeDirtyAABBs(this.renderQueue),\n          ...this.removedRBushNodeAABBs.map(({ minX, minY, maxX, maxY }) => {\n            const aabb = new AABB();\n            aabb.setMinMax(\n              // vec3.fromValues(minX, minY, 0),\n              // vec3.fromValues(maxX, maxY, 0),\n              [minX, minY, 0],\n              [maxX, maxY, 0],\n            );\n            return aabb;\n          }),\n        );\n        this.removedRBushNodeAABBs = [];\n\n        if (AABB.isEmpty(dirtyRenderBounds)) {\n          this.renderQueue = [];\n          return;\n        }\n\n        const dirtyRect = this.convertAABB2Rect(dirtyRenderBounds);\n        const { x, y, width, height } = dirtyRect;\n\n        const tl = vec3.transformMat4(this.vec3a, [x, y, 0], this.vpMatrix);\n        const tr = vec3.transformMat4(\n          this.vec3b,\n          [x + width, y, 0],\n          this.vpMatrix,\n        );\n        const bl = vec3.transformMat4(\n          this.vec3c,\n          [x, y + height, 0],\n          this.vpMatrix,\n        );\n        const br = vec3.transformMat4(\n          this.vec3d,\n          [x + width, y + height, 0],\n          this.vpMatrix,\n        );\n\n        const minx = Math.min(tl[0], tr[0], br[0], bl[0]);\n        const miny = Math.min(tl[1], tr[1], br[1], bl[1]);\n        const maxx = Math.max(tl[0], tr[0], br[0], bl[0]);\n        const maxy = Math.max(tl[1], tr[1], br[1], bl[1]);\n\n        const ix = Math.floor(minx);\n        const iy = Math.floor(miny);\n        const iwidth = Math.ceil(maxx - minx);\n        const iheight = Math.ceil(maxy - miny);\n\n        context.save();\n        this.clearRect(context, ix, iy, iwidth, iheight, config.background);\n        context.beginPath();\n        context.rect(ix, iy, iwidth, iheight);\n        context.clip();\n\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n        context.setTransform(\n          this.vpMatrix[0],\n          this.vpMatrix[1],\n          this.vpMatrix[4],\n          this.vpMatrix[5],\n          this.vpMatrix[12],\n          this.vpMatrix[13],\n        );\n\n        // draw dirty rectangle\n        const { enableDirtyRectangleRenderingDebug } =\n          config.renderer.getConfig();\n        if (enableDirtyRectangleRenderingDebug) {\n          canvas.dispatchEvent(\n            new CustomEvent(CanvasEvent.DIRTY_RECTANGLE, {\n              dirtyRect: {\n                x: ix,\n                y: iy,\n                width: iwidth,\n                height: iheight,\n              },\n            }),\n          );\n        }\n\n        // search objects intersect with dirty rectangle\n        const dirtyObjects = this.searchDirtyObjects(dirtyRenderBounds);\n\n        // do rendering\n        dirtyObjects\n          // sort by z-index\n          .sort((a, b) => a.sortable.renderOrder - b.sortable.renderOrder)\n          .forEach((object) => {\n            // culled object should not be rendered\n            if (object && object.isVisible() && !object.isCulled()) {\n              this.renderDisplayObject(\n                object,\n                context,\n                this.context,\n                this.#renderState,\n                runtime,\n              );\n            }\n          });\n\n        context.restore();\n\n        // save dirty AABBs in last frame\n        this.renderQueue.forEach((object) => {\n          this.saveDirtyAABB(object);\n        });\n\n        // clear queue\n        this.renderQueue = [];\n      }\n\n      // pop restore stack, eg. root -> parent -> child\n      this.#renderState.restoreStack.forEach(() => {\n        context.restore();\n      });\n      // clear restore stack\n      this.#renderState.restoreStack = [];\n    });\n\n    renderingService.hooks.render.tap(\n      CanvasRendererPlugin.tag,\n      (object: DisplayObject) => {\n        if (!this.clearFullScreen) {\n          // render at the end of frame\n          this.renderQueue.push(object);\n        }\n      },\n    );\n  }\n\n  private clearRect(\n    context: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    background: string,\n  ) {\n    // clearRect is faster than fillRect @see https://stackoverflow.com/a/30830253\n    context.clearRect(x, y, width, height);\n    if (background) {\n      context.fillStyle = background;\n      context.fillRect(x, y, width, height);\n    }\n  }\n\n  renderDisplayObjectOptimized(\n    object: DisplayObject,\n    context: CanvasRenderingContext2D,\n    canvasContext: CanvasContext,\n    renderState: RenderState,\n    runtime: GlobalRuntime,\n  ) {\n    const nodeName = object.nodeName as Shape;\n    let updateTransform = false;\n    let clipDraw = false;\n\n    // @ts-ignore\n    const styleRenderer = this.context.styleRendererFactory[nodeName];\n    const generatePath = this.pathGeneratorFactory[nodeName];\n\n    // clip path\n    const { clipPath } = object.parsedStyle;\n    if (clipPath) {\n      updateTransform =\n        !renderState.prevObject ||\n        !mat4.exactEquals(\n          clipPath.getWorldTransform(),\n          renderState.prevObject.getWorldTransform(),\n        );\n\n      if (updateTransform) {\n        this.applyWorldTransform(context, clipPath);\n        renderState.prevObject = null;\n      }\n\n      // generate path in local space\n      const generatePath =\n        this.pathGeneratorFactory[clipPath.nodeName as Shape];\n      if (generatePath) {\n        context.save();\n        clipDraw = true;\n\n        context.beginPath();\n        generatePath(context, clipPath.parsedStyle);\n        context.closePath();\n        context.clip();\n      }\n    }\n\n    // fill & stroke\n\n    if (styleRenderer) {\n      updateTransform =\n        !renderState.prevObject ||\n        !mat4.exactEquals(\n          object.getWorldTransform(),\n          renderState.prevObject.getWorldTransform(),\n        );\n\n      if (updateTransform) {\n        this.applyWorldTransform(context, object);\n      }\n\n      let forceUpdateStyle = !renderState.prevObject;\n      if (!forceUpdateStyle) {\n        const prevNodeName = renderState.prevObject.nodeName as Shape;\n\n        if (nodeName === Shape.TEXT) {\n          forceUpdateStyle = prevNodeName !== Shape.TEXT;\n        } else if (nodeName === Shape.IMAGE) {\n          forceUpdateStyle = prevNodeName !== Shape.IMAGE;\n        } else {\n          forceUpdateStyle =\n            prevNodeName === Shape.TEXT || prevNodeName === Shape.IMAGE;\n        }\n      }\n\n      styleRenderer.applyStyleToContext(\n        context,\n        object,\n        forceUpdateStyle,\n        renderState,\n      );\n\n      renderState.prevObject = object;\n    }\n\n    if (generatePath) {\n      context.beginPath();\n      generatePath(context, object.parsedStyle);\n      if (\n        nodeName !== Shape.LINE &&\n        nodeName !== Shape.PATH &&\n        nodeName !== Shape.POLYLINE\n      ) {\n        context.closePath();\n      }\n    }\n\n    // fill & stroke\n    if (styleRenderer) {\n      styleRenderer.drawToContext(\n        context,\n        object,\n        this.#renderState,\n        this,\n        runtime,\n      );\n    }\n\n    if (clipDraw) {\n      context.restore();\n    }\n\n    // finish rendering, clear dirty flag\n    object.renderable.dirty = false;\n  }\n\n  renderDisplayObject(\n    object: DisplayObject,\n    context: CanvasRenderingContext2D,\n    canvasContext: CanvasContext,\n    renderState: RenderState,\n    runtime: GlobalRuntime,\n  ) {\n    const nodeName = object.nodeName as Shape;\n\n    // restore to its ancestor\n\n    const parent =\n      renderState.restoreStack[renderState.restoreStack.length - 1];\n    if (\n      parent &&\n      !(\n        object.compareDocumentPosition(parent) & Node.DOCUMENT_POSITION_CONTAINS\n      )\n    ) {\n      context.restore();\n      renderState.restoreStack.pop();\n    }\n\n    // @ts-ignore\n    const styleRenderer = this.context.styleRendererFactory[nodeName];\n    const generatePath = this.pathGeneratorFactory[nodeName];\n\n    // clip path\n    const { clipPath } = object.parsedStyle;\n    if (clipPath) {\n      this.applyWorldTransform(context, clipPath);\n\n      // generate path in local space\n      const generatePath =\n        this.pathGeneratorFactory[clipPath.nodeName as Shape];\n      if (generatePath) {\n        context.save();\n\n        // save clip\n        renderState.restoreStack.push(object);\n\n        context.beginPath();\n        generatePath(context, clipPath.parsedStyle);\n        context.closePath();\n        context.clip();\n      }\n    }\n\n    // fill & stroke\n\n    if (styleRenderer) {\n      this.applyWorldTransform(context, object);\n\n      context.save();\n\n      // apply attributes to context\n      this.applyAttributesToContext(context, object);\n    }\n\n    if (generatePath) {\n      context.beginPath();\n      generatePath(context, object.parsedStyle);\n      if (\n        nodeName !== Shape.LINE &&\n        nodeName !== Shape.PATH &&\n        nodeName !== Shape.POLYLINE\n      ) {\n        context.closePath();\n      }\n    }\n\n    // fill & stroke\n    if (styleRenderer) {\n      styleRenderer.render(\n        context,\n        object.parsedStyle,\n        object,\n        canvasContext,\n        this,\n        runtime,\n      );\n\n      // restore applied attributes, eg. shadowBlur shadowColor...\n      context.restore();\n    }\n\n    // finish rendering, clear dirty flag\n    object.renderable.dirty = false;\n  }\n\n  applyAttributesToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n  ) {\n    const { stroke, fill, opacity, lineDash, lineDashOffset } =\n      object.parsedStyle as ParsedBaseStyleProps;\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setLineDash\n    if (lineDash) {\n      context.setLineDash(lineDash);\n    }\n\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\n    if (!isNil(lineDashOffset)) {\n      context.lineDashOffset = lineDashOffset;\n    }\n\n    if (!isNil(opacity)) {\n      context.globalAlpha *= opacity;\n    }\n\n    if (\n      !isNil(stroke) &&\n      !Array.isArray(stroke) &&\n      !(stroke as CSSRGB).isNone\n    ) {\n      context.strokeStyle = object.attributes.stroke as string;\n    }\n\n    if (!isNil(fill) && !Array.isArray(fill) && !(fill as CSSRGB).isNone) {\n      context.fillStyle = object.attributes.fill as string;\n    }\n  }\n\n  private convertAABB2Rect(aabb: AABB): Rect {\n    const min = aabb.getMin();\n    const max = aabb.getMax();\n    // expand the rectangle a bit to avoid artifacts\n    // @see https://www.yuque.com/antv/ou292n/bi8nix#ExvCu\n    const minX = Math.floor(min[0]);\n    const minY = Math.floor(min[1]);\n    const maxX = Math.ceil(max[0]);\n    const maxY = Math.ceil(max[1]);\n    const width = maxX - minX;\n    const height = maxY - minY;\n\n    return { x: minX, y: minY, width, height };\n  }\n\n  /**\n   * TODO: merge dirty rectangles with some strategies.\n   * For now, we just simply merge all the rectangles into one.\n   * @see https://idom.me/articles/841.html\n   */\n  private mergeDirtyAABBs(dirtyObjects: DisplayObject[]): AABB {\n    // merge into a big AABB\n    // TODO: skip descendant if ancestor is caculated, but compareNodePosition is really slow\n    const aabb = new AABB();\n    dirtyObjects.forEach((object) => {\n      const renderBounds = object.getRenderBounds();\n      aabb.add(renderBounds);\n\n      const { dirtyRenderBounds } = object.renderable;\n      if (dirtyRenderBounds) {\n        aabb.add(dirtyRenderBounds);\n      }\n    });\n\n    return aabb;\n  }\n\n  private searchDirtyObjects(dirtyRectangle: AABB): DisplayObject[] {\n    // search in r-tree, get all affected nodes\n    const [minX, minY] = dirtyRectangle.getMin();\n    const [maxX, maxY] = dirtyRectangle.getMax();\n    const rBushNodes = this.rBush.search({\n      minX,\n      minY,\n      maxX,\n      maxY,\n    });\n\n    return rBushNodes.map(({ displayObject }) => displayObject);\n  }\n\n  private saveDirtyAABB(object: DisplayObject) {\n    const { renderable } = object;\n    if (!renderable.dirtyRenderBounds) {\n      renderable.dirtyRenderBounds = new AABB();\n    }\n    const renderBounds = object.getRenderBounds();\n    if (renderBounds) {\n      // save last dirty aabb\n      renderable.dirtyRenderBounds.update(\n        renderBounds.center,\n        renderBounds.halfExtents,\n      );\n    }\n  }\n\n  private applyWorldTransform(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    matrix?: mat4,\n  ) {\n    // apply clip shape's RTS\n    if (matrix) {\n      mat4.copy(this.tmpMat4, object.getLocalTransform());\n      mat4.multiply(this.tmpMat4, matrix, this.tmpMat4);\n      mat4.multiply(this.tmpMat4, this.vpMatrix, this.tmpMat4);\n    } else {\n      // apply RTS transformation in world space\n      mat4.copy(this.tmpMat4, object.getWorldTransform());\n      mat4.multiply(this.tmpMat4, this.vpMatrix, this.tmpMat4);\n    }\n\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n    context.setTransform(\n      this.tmpMat4[0],\n      this.tmpMat4[1],\n      this.tmpMat4[4],\n      this.tmpMat4[5],\n      this.tmpMat4[12],\n      this.tmpMat4[13],\n    );\n  }\n\n  private safeMergeAABB(...aabbs: AABB[]): AABB {\n    const merged = new AABB();\n    aabbs.forEach((aabb) => {\n      merged.add(aabb);\n    });\n    return merged;\n  }\n}\n","import {\n  CanvasContext,\n  CSSGradientValue,\n  DisplayObject,\n  GlobalRuntime,\n  LinearGradient,\n  Pattern,\n  RadialGradient,\n  Rect,\n  GradientType,\n} from '@antv/g-lite';\nimport type { ImagePool } from '@antv/g-plugin-image-loader';\nimport {\n  CanvasRendererPlugin,\n  type RenderState,\n} from '../../CanvasRendererPlugin';\n\nexport function getPattern(\n  pattern: Pattern,\n  object: DisplayObject,\n  context: CanvasRenderingContext2D,\n  canvasContext: CanvasContext,\n  plugin: CanvasRendererPlugin,\n  runtime: GlobalRuntime,\n  imagePool: ImagePool,\n): CanvasPattern {\n  let $offscreenCanvas: HTMLCanvasElement;\n  let dpr: number;\n  if ((pattern.image as Rect).nodeName === 'rect') {\n    const { width, height } = (pattern.image as Rect).parsedStyle;\n    dpr = canvasContext.contextService.getDPR();\n    const { offscreenCanvas } = canvasContext.config;\n    $offscreenCanvas = runtime.offscreenCanvasCreator.getOrCreateCanvas(\n      offscreenCanvas,\n    ) as HTMLCanvasElement;\n\n    $offscreenCanvas.width = width * dpr;\n    $offscreenCanvas.height = height * dpr;\n\n    const offscreenCanvasContext =\n      runtime.offscreenCanvasCreator.getOrCreateContext(\n        offscreenCanvas,\n      ) as CanvasRenderingContext2D;\n\n    const renderState: RenderState = {\n      restoreStack: [],\n      prevObject: null,\n      currentContext: new Map(),\n    };\n\n    // offscreenCanvasContext.scale(1 / dpr, 1 / dpr);\n\n    (pattern.image as Rect).forEach((object: DisplayObject) => {\n      plugin.renderDisplayObject(\n        object,\n        offscreenCanvasContext,\n        canvasContext,\n        renderState,\n        runtime,\n      );\n    });\n\n    renderState.restoreStack.forEach(() => {\n      offscreenCanvasContext.restore();\n    });\n  }\n\n  const canvasPattern = imagePool.getOrCreatePatternSync(\n    object,\n    pattern,\n    context,\n    $offscreenCanvas,\n    dpr,\n    object.getGeometryBounds().min,\n    () => {\n      // set dirty rectangle flag\n      object.renderable.dirty = true;\n      canvasContext.renderingService.dirtify();\n    },\n  );\n\n  return canvasPattern;\n}\n\nexport function getColor(\n  parsedColor: CSSGradientValue,\n  object: DisplayObject,\n  context: CanvasRenderingContext2D,\n  imagePool: ImagePool,\n) {\n  let color: CanvasGradient | string;\n\n  if (\n    parsedColor.type === GradientType.LinearGradient ||\n    parsedColor.type === GradientType.RadialGradient\n  ) {\n    const bounds = object.getGeometryBounds();\n    const width = (bounds && bounds.halfExtents[0] * 2) || 1;\n    const height = (bounds && bounds.halfExtents[1] * 2) || 1;\n    const min = (bounds && bounds.min) || [0, 0];\n    color = imagePool.getOrCreateGradient(\n      {\n        type: parsedColor.type,\n        ...(parsedColor.value as LinearGradient & RadialGradient),\n        min: min as [number, number],\n        width,\n        height,\n      },\n      context,\n    );\n  }\n\n  return color;\n}\n","import {\n  CanvasContext,\n  CSSRGB,\n  DisplayObject,\n  GlobalRuntime,\n  ParsedBaseStyleProps,\n  isPattern,\n  Shape,\n} from '@antv/g-lite';\nimport type { ImagePool } from '@antv/g-plugin-image-loader';\nimport { isNil } from '@antv/util';\nimport {\n  CanvasRendererPlugin,\n  type RenderState,\n} from '../../CanvasRendererPlugin';\nimport type { StyleRenderer } from './interfaces';\nimport { getColor, getPattern } from './helper';\n\nconst SHADOW_NUMBER_STYLE = [\n  'shadowBlur',\n  'shadowOffsetX',\n  'shadowOffsetY',\n] as const;\nconst STROKE_STYLE = ['lineCap', 'lineJoin', 'miterLimit'] as const;\nexport const DEFAULT_STYLE = {\n  // common\n  globalAlpha: 1,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  shadowColor: '#000',\n  filter: 'none' as const,\n  globalCompositeOperation: 'source-over' as const,\n\n  // stroke/fill\n  strokeStyle: '#000',\n  strokeOpacity: 1,\n  lineWidth: 1,\n  lineDash: [],\n  lineDashOffset: 0,\n  lineCap: 'butt' as const,\n  lineJoin: 'miter' as const,\n  miterLimit: 10,\n  fillStyle: '#000',\n  fillOpacity: 1,\n\n  // image\n};\n\nconst defaultParsedStyle = {} as ParsedBaseStyleProps;\n\n/**\n * Updating the canvas context is an expensive operation. The state of the context is cached and the actual update operation is performed only when the cache is not hit.\n *\n * In any case, the previous value is returned, which is convenient for temporarily updating the context and restoring it later.\n */\nfunction updateContextIfNotHitCache<\n  K extends keyof CanvasRenderingContext2D | 'lineDash',\n  V = unknown,\n>(context: CanvasRenderingContext2D, key: K, value: V, cache: Map<K, unknown>) {\n  const prevValue = (\n    cache.has(key)\n      ? cache.get(key)\n      : DEFAULT_STYLE[key as keyof typeof DEFAULT_STYLE]\n  ) as V;\n\n  if (prevValue !== value) {\n    // console.log('not hit cache', key, value, prevValue, cache);\n    if (key === 'lineDash') {\n      context.setLineDash(value as number[]);\n    } else {\n      // @ts-ignore\n      context[key] = value;\n    }\n    cache.set(key, value);\n  }\n\n  return prevValue;\n}\n\nexport class OptimizedDefaultRenderer implements StyleRenderer {\n  constructor(public imagePool: ImagePool) {}\n\n  applyAttributesToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n  ) {}\n\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedBaseStyleProps,\n    object: DisplayObject,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {}\n\n  // #region common style\n  private applyCommonStyleToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    forceUpdate: boolean,\n    renderState: RenderState,\n  ) {\n    // const dpr = object.ownerDocument.defaultView.getContextService().getDPR();\n    const prevStyle = forceUpdate\n      ? defaultParsedStyle\n      : renderState.prevObject.parsedStyle;\n    const style = object.parsedStyle;\n\n    if (forceUpdate || style.opacity !== prevStyle.opacity) {\n      updateContextIfNotHitCache(\n        context,\n        'globalAlpha',\n        !isNil(style.opacity) ? style.opacity : DEFAULT_STYLE.globalAlpha,\n        renderState.currentContext,\n      );\n    }\n\n    // TODO blend prop\n    // @ts-ignore\n    if (forceUpdate || style.blend !== prevStyle.blend) {\n      updateContextIfNotHitCache(\n        context,\n        'globalCompositeOperation',\n        // @ts-ignore\n        !isNil(style.blend)\n          ? // @ts-ignore\n            style.blend\n          : DEFAULT_STYLE.globalCompositeOperation,\n        renderState.currentContext,\n      );\n    }\n  }\n  // #endregion common style\n\n  // #region stroke/fill style\n  private applyStrokeFillStyleToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    forceUpdate: boolean,\n    renderState: RenderState,\n  ) {\n    const prevStyle = forceUpdate\n      ? defaultParsedStyle\n      : renderState.prevObject.parsedStyle;\n    const style = object.parsedStyle;\n    const { lineWidth = DEFAULT_STYLE.lineWidth } = style;\n    const hasFill = style.fill && !(style.fill as CSSRGB).isNone;\n    const hasStroke =\n      style.stroke && !(style.stroke as CSSRGB).isNone && lineWidth > 0;\n\n    if (hasStroke) {\n      if (\n        forceUpdate ||\n        object.attributes.stroke !== renderState.prevObject.attributes.stroke\n      ) {\n        const value =\n          !isNil(style.stroke) &&\n          !Array.isArray(style.stroke) &&\n          !(style.stroke as CSSRGB).isNone\n            ? object.attributes.stroke\n            : DEFAULT_STYLE.strokeStyle;\n\n        updateContextIfNotHitCache(\n          context,\n          'strokeStyle',\n          value,\n          renderState.currentContext,\n        );\n      }\n\n      if (forceUpdate || style.lineWidth !== prevStyle.lineWidth) {\n        updateContextIfNotHitCache(\n          context,\n          'lineWidth',\n          !isNil(style.lineWidth) ? style.lineWidth : DEFAULT_STYLE.lineWidth,\n          renderState.currentContext,\n        );\n      }\n\n      if (forceUpdate || style.lineDash !== prevStyle.lineDash) {\n        updateContextIfNotHitCache(\n          context,\n          'lineDash',\n          style.lineDash || DEFAULT_STYLE.lineDash,\n          renderState.currentContext,\n        );\n      }\n\n      if (forceUpdate || style.lineDashOffset !== prevStyle.lineDashOffset) {\n        updateContextIfNotHitCache(\n          context,\n          'lineDashOffset',\n          !isNil(style.lineDashOffset)\n            ? style.lineDashOffset\n            : DEFAULT_STYLE.lineDashOffset,\n          renderState.currentContext,\n        );\n      }\n\n      for (let i = 0; i < STROKE_STYLE.length; i++) {\n        const styleName = STROKE_STYLE[i];\n        if (forceUpdate || style[styleName] !== prevStyle[styleName]) {\n          updateContextIfNotHitCache(\n            context,\n            styleName,\n            !isNil(style[styleName])\n              ? style[styleName]\n              : DEFAULT_STYLE[styleName],\n            renderState.currentContext,\n          );\n        }\n      }\n    }\n\n    if (\n      hasFill &&\n      (forceUpdate ||\n        object.attributes.fill !== renderState.prevObject.attributes.fill)\n    ) {\n      const value =\n        !isNil(style.fill) &&\n        !Array.isArray(style.fill) &&\n        !(style.fill as CSSRGB).isNone\n          ? object.attributes.fill\n          : DEFAULT_STYLE.fillStyle;\n\n      updateContextIfNotHitCache(\n        context,\n        'fillStyle',\n        value,\n        renderState.currentContext,\n      );\n    }\n  }\n  // #endregion stroke/fill style\n\n  applyStyleToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    forceUpdate: boolean,\n    renderState: RenderState,\n  ) {\n    const nodeName = object.nodeName as Shape;\n\n    this.applyCommonStyleToContext(context, object, forceUpdate, renderState);\n\n    if (nodeName === Shape.IMAGE) {\n      //\n    } else {\n      this.applyStrokeFillStyleToContext(\n        context,\n        object,\n        forceUpdate,\n        renderState,\n      );\n    }\n  }\n\n  applyShadowAndFilterStyleToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    hasShadow: boolean,\n    renderState: RenderState,\n  ) {\n    const style = object.parsedStyle;\n\n    if (hasShadow) {\n      updateContextIfNotHitCache(\n        context,\n        'shadowColor',\n        style.shadowColor.toString(),\n        renderState.currentContext,\n      );\n      for (let i = 0; i < SHADOW_NUMBER_STYLE.length; i++) {\n        const styleName = SHADOW_NUMBER_STYLE[i];\n        updateContextIfNotHitCache(\n          context,\n          styleName,\n          style[styleName] || DEFAULT_STYLE[styleName],\n          renderState.currentContext,\n        );\n      }\n    }\n\n    if (style.filter && style.filter.length) {\n      updateContextIfNotHitCache(\n        context,\n        'filter',\n        // use raw filter string\n        object.attributes.filter,\n        renderState.currentContext,\n      );\n    }\n  }\n\n  clearShadowAndFilterStyleForContext(\n    context: CanvasRenderingContext2D,\n    hasShadow: boolean,\n    hasFilter: boolean,\n    renderState: RenderState,\n    onlyClearShadowFilter = false,\n  ) {\n    if (hasShadow) {\n      updateContextIfNotHitCache(\n        context,\n        'shadowColor',\n        DEFAULT_STYLE.shadowColor,\n        renderState.currentContext,\n      );\n      for (let i = 0; i < SHADOW_NUMBER_STYLE.length; i++) {\n        const styleName = SHADOW_NUMBER_STYLE[i];\n        updateContextIfNotHitCache(\n          context,\n          styleName,\n          DEFAULT_STYLE[styleName],\n          renderState.currentContext,\n        );\n      }\n    }\n\n    if (hasFilter) {\n      if (hasShadow && onlyClearShadowFilter) {\n        // save drop-shadow filter\n        const oldFilter = context.filter;\n        if (!isNil(oldFilter) && oldFilter.indexOf('drop-shadow') > -1) {\n          updateContextIfNotHitCache(\n            context,\n            'filter',\n            oldFilter.replace(/drop-shadow\\([^)]*\\)/, '').trim() ||\n              DEFAULT_STYLE.filter,\n            renderState.currentContext,\n          );\n        }\n      } else {\n        updateContextIfNotHitCache(\n          context,\n          'filter',\n          DEFAULT_STYLE.filter,\n          renderState.currentContext,\n        );\n      }\n    }\n  }\n\n  fillToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    renderState: RenderState,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    const { fill, fillRule } = object.parsedStyle;\n    let resetStyle = null as unknown;\n\n    if (Array.isArray(fill) && fill.length > 0) {\n      fill.forEach((gradient) => {\n        const prevStyle = updateContextIfNotHitCache(\n          context,\n          'fillStyle',\n          getColor(gradient, object, context, this.imagePool),\n          renderState.currentContext,\n        );\n        resetStyle = resetStyle ?? prevStyle;\n\n        if (fillRule) {\n          context.fill(fillRule);\n        } else {\n          context.fill();\n        }\n      });\n    } else {\n      if (isPattern(fill)) {\n        const pattern = getPattern(\n          fill,\n          object,\n          context,\n          object.ownerDocument.defaultView.context,\n          plugin,\n          runtime,\n          this.imagePool,\n        );\n        if (pattern) {\n          context.fillStyle = pattern;\n          resetStyle = true;\n        }\n      }\n\n      if (fillRule) {\n        context.fill(fillRule);\n      } else {\n        context.fill();\n      }\n    }\n\n    if (resetStyle !== null) {\n      updateContextIfNotHitCache(\n        context,\n        'fillStyle',\n        resetStyle,\n        renderState.currentContext,\n      );\n    }\n  }\n\n  strokeToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    renderState: RenderState,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    const { stroke } = object.parsedStyle;\n    let resetStyle = null as unknown;\n\n    if (Array.isArray(stroke) && stroke.length > 0) {\n      stroke.forEach((gradient) => {\n        const prevStyle = updateContextIfNotHitCache(\n          context,\n          'strokeStyle',\n          getColor(gradient, object, context, this.imagePool),\n          renderState.currentContext,\n        );\n        resetStyle = resetStyle ?? prevStyle;\n\n        context.stroke();\n      });\n    } else {\n      if (isPattern(stroke)) {\n        const pattern = getPattern(\n          stroke,\n          object,\n          context,\n          object.ownerDocument.defaultView.context,\n          plugin,\n          runtime,\n          this.imagePool,\n        );\n        if (pattern) {\n          const prevStyle = updateContextIfNotHitCache(\n            context,\n            'strokeStyle',\n            pattern,\n            renderState.currentContext,\n          );\n          resetStyle = resetStyle ?? prevStyle;\n        }\n      }\n\n      context.stroke();\n    }\n\n    if (resetStyle !== null) {\n      updateContextIfNotHitCache(\n        context,\n        'strokeStyle',\n        resetStyle,\n        renderState.currentContext,\n      );\n    }\n  }\n\n  drawToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    renderState: RenderState,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    const nodeName = object.nodeName as Shape;\n    const style = object.parsedStyle;\n    const {\n      opacity = DEFAULT_STYLE.globalAlpha,\n      fillOpacity = DEFAULT_STYLE.fillOpacity,\n      strokeOpacity = DEFAULT_STYLE.strokeOpacity,\n      lineWidth = DEFAULT_STYLE.lineWidth,\n    } = style;\n\n    const hasFill = style.fill && !(style.fill as CSSRGB).isNone;\n    const hasStroke =\n      style.stroke && !(style.stroke as CSSRGB).isNone && lineWidth > 0;\n\n    if (!hasFill && !hasStroke) {\n      return;\n    }\n\n    const hasShadow = !isNil(style.shadowColor) && style.shadowBlur > 0;\n    const isInnerShadow = style.shadowType === 'inner';\n    const isFillTransparent = (style.fill as CSSRGB)?.alpha === 0;\n    const hasFilter = !!(style.filter && style.filter.length);\n    // Shadows can only be applied to fill() or stroke(), the default is fill()\n    const shouldDrawShadowWithStroke =\n      hasShadow &&\n      hasStroke &&\n      (nodeName === Shape.PATH ||\n        nodeName === Shape.LINE ||\n        nodeName === Shape.POLYLINE ||\n        isFillTransparent ||\n        isInnerShadow);\n\n    // TODO https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/paint-order\n\n    let originGlobalAlpha: number | null = null;\n\n    if (hasFill) {\n      if (!shouldDrawShadowWithStroke) {\n        this.applyShadowAndFilterStyleToContext(\n          context,\n          object,\n          hasShadow,\n          renderState,\n        );\n      }\n\n      const updateOpacity = opacity * fillOpacity;\n\n      originGlobalAlpha = updateContextIfNotHitCache(\n        context,\n        'globalAlpha',\n        updateOpacity,\n        renderState.currentContext,\n      );\n\n      this.fillToContext(context, object, renderState, plugin, runtime);\n\n      if (!shouldDrawShadowWithStroke) {\n        this.clearShadowAndFilterStyleForContext(\n          context,\n          hasShadow,\n          hasFilter,\n          renderState,\n        );\n      }\n    }\n    if (hasStroke) {\n      let clearShadowAndFilter = false;\n      const updateOpacity = opacity * strokeOpacity;\n      const prevOpacity = updateContextIfNotHitCache(\n        context,\n        'globalAlpha',\n        updateOpacity,\n        renderState.currentContext,\n      );\n      originGlobalAlpha = hasFill ? originGlobalAlpha : prevOpacity;\n\n      if (shouldDrawShadowWithStroke) {\n        this.applyShadowAndFilterStyleToContext(\n          context,\n          object,\n          hasShadow,\n          renderState,\n        );\n        clearShadowAndFilter = true;\n\n        if (isInnerShadow) {\n          const originBlend = context.globalCompositeOperation;\n          context.globalCompositeOperation = 'source-atop';\n\n          this.strokeToContext(context, object, renderState, plugin, runtime);\n\n          context.globalCompositeOperation = originBlend;\n          this.clearShadowAndFilterStyleForContext(\n            context,\n            hasShadow,\n            hasFilter,\n            renderState,\n            true,\n          );\n        }\n      }\n\n      this.strokeToContext(context, object, renderState, plugin, runtime);\n\n      if (clearShadowAndFilter) {\n        this.clearShadowAndFilterStyleForContext(\n          context,\n          hasShadow,\n          hasFilter,\n          renderState,\n        );\n      }\n    }\n\n    // clear\n    if (originGlobalAlpha !== null) {\n      updateContextIfNotHitCache(\n        context,\n        'globalAlpha',\n        originGlobalAlpha,\n        renderState.currentContext,\n      );\n    }\n  }\n}\n","import {\n  CanvasContext,\n  CSSGradientValue,\n  CSSRGB,\n  DisplayObject,\n  GlobalRuntime,\n  ParsedBaseStyleProps,\n  Pattern,\n  isPattern,\n  Shape,\n} from '@antv/g-lite';\nimport type { ImagePool } from '@antv/g-plugin-image-loader';\nimport { isNil } from '@antv/util';\nimport { CanvasRendererPlugin } from '../../CanvasRendererPlugin';\nimport { OptimizedDefaultRenderer, DEFAULT_STYLE } from './OptimizedDefault';\nimport { getColor, getPattern } from './helper';\n\nexport class DefaultRenderer extends OptimizedDefaultRenderer {\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedBaseStyleProps,\n    object: DisplayObject,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    const {\n      fill,\n      fillRule,\n      opacity = 1,\n      fillOpacity = 1,\n      stroke,\n      strokeOpacity = 1,\n      lineWidth = 1,\n      lineCap,\n      lineJoin,\n      shadowType,\n      shadowColor,\n      shadowBlur,\n      filter,\n      miterLimit,\n    } = parsedStyle;\n    const hasFill = fill && !(fill as CSSRGB).isNone;\n    const hasStroke = stroke && !(stroke as CSSRGB).isNone && lineWidth > 0;\n\n    const isFillTransparent = (fill as CSSRGB)?.alpha === 0;\n    const hasFilter = !!(filter && filter.length);\n    const hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n    const nodeName = object.nodeName as Shape;\n    const isInnerShadow = shadowType === 'inner';\n    const shouldDrawShadowWithStroke =\n      hasStroke &&\n      hasShadow &&\n      (nodeName === Shape.PATH ||\n        nodeName === Shape.LINE ||\n        nodeName === Shape.POLYLINE ||\n        isFillTransparent ||\n        isInnerShadow);\n\n    if (hasFill) {\n      context.globalAlpha = opacity * fillOpacity;\n\n      if (!shouldDrawShadowWithStroke) {\n        setShadowAndFilter(object, context, hasShadow);\n      }\n\n      applyFill(\n        context,\n        object,\n        fill,\n        fillRule,\n        canvasContext,\n        plugin,\n        runtime,\n        this.imagePool,\n      );\n\n      if (!shouldDrawShadowWithStroke) {\n        this.clearShadowAndFilter(context, hasFilter, hasShadow);\n      }\n    }\n\n    if (hasStroke) {\n      context.globalAlpha = opacity * strokeOpacity;\n      context.lineWidth = lineWidth;\n      if (!isNil(miterLimit)) {\n        context.miterLimit = miterLimit;\n      }\n\n      if (!isNil(lineCap)) {\n        context.lineCap = lineCap;\n      }\n\n      if (!isNil(lineJoin)) {\n        context.lineJoin = lineJoin;\n      }\n\n      if (shouldDrawShadowWithStroke) {\n        if (isInnerShadow) {\n          context.globalCompositeOperation = 'source-atop';\n        }\n        setShadowAndFilter(object, context, true);\n\n        if (isInnerShadow) {\n          applyStroke(\n            context,\n            object,\n            stroke,\n            canvasContext,\n            plugin,\n            runtime,\n            this.imagePool,\n          );\n          context.globalCompositeOperation =\n            DEFAULT_STYLE.globalCompositeOperation;\n          this.clearShadowAndFilter(context, hasFilter, true);\n        }\n      }\n\n      applyStroke(\n        context,\n        object,\n        stroke,\n        canvasContext,\n        plugin,\n        runtime,\n        this.imagePool,\n      );\n    }\n  }\n\n  private clearShadowAndFilter(\n    context: CanvasRenderingContext2D,\n    hasFilter: boolean,\n    hasShadow: boolean,\n  ) {\n    if (hasShadow) {\n      context.shadowColor = 'transparent';\n      context.shadowBlur = 0;\n    }\n\n    if (hasFilter) {\n      // save drop-shadow filter\n      const oldFilter = context.filter;\n      if (!isNil(oldFilter) && oldFilter.indexOf('drop-shadow') > -1) {\n        context.filter =\n          oldFilter.replace(/drop-shadow\\([^)]*\\)/, '').trim() || 'none';\n      }\n    }\n  }\n}\n\n/**\n * apply before fill and stroke but only once\n */\nexport function setShadowAndFilter(\n  object: DisplayObject,\n  context: CanvasRenderingContext2D,\n  hasShadow: boolean,\n) {\n  const { filter, shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY } =\n    object.parsedStyle;\n\n  if (filter && filter.length) {\n    // use raw filter string\n    context.filter = object.style.filter;\n  }\n\n  if (hasShadow) {\n    context.shadowColor = shadowColor.toString();\n    context.shadowBlur = shadowBlur || 0;\n    context.shadowOffsetX = shadowOffsetX || 0;\n    context.shadowOffsetY = shadowOffsetY || 0;\n  }\n}\n\nexport function applyFill(\n  context: CanvasRenderingContext2D,\n  object: DisplayObject,\n  fill: CSSRGB | CSSGradientValue[] | Pattern,\n  fillRule: 'nonzero' | 'evenodd',\n  canvasContext: CanvasContext,\n  plugin: CanvasRendererPlugin,\n  runtime: GlobalRuntime,\n  imagePool: ImagePool,\n  skipFill = false,\n) {\n  if (Array.isArray(fill)) {\n    fill.forEach((gradient) => {\n      context.fillStyle = getColor(gradient, object, context, imagePool);\n      if (!skipFill) {\n        fillRule ? context.fill(fillRule) : context.fill();\n      }\n    });\n  } else {\n    if (isPattern(fill)) {\n      context.fillStyle = getPattern(\n        fill,\n        object,\n        context,\n        canvasContext,\n        plugin,\n        runtime,\n        imagePool,\n      );\n    }\n    if (!skipFill) {\n      fillRule ? context.fill(fillRule) : context.fill();\n    }\n  }\n}\n\nexport function applyStroke(\n  context: CanvasRenderingContext2D,\n  object: DisplayObject,\n  stroke: CSSRGB | CSSGradientValue[] | Pattern,\n  canvasContext: CanvasContext,\n  plugin: CanvasRendererPlugin,\n  runtime: GlobalRuntime,\n  imagePool: ImagePool,\n  skipStroke = false,\n) {\n  if (Array.isArray(stroke)) {\n    stroke.forEach((gradient) => {\n      context.strokeStyle = getColor(gradient, object, context, imagePool);\n      if (!skipStroke) {\n        context.stroke();\n      }\n    });\n  } else {\n    if (isPattern(stroke)) {\n      context.strokeStyle = getPattern(\n        stroke,\n        object,\n        context,\n        canvasContext,\n        plugin,\n        runtime,\n        imagePool,\n      );\n    }\n    if (!skipStroke) {\n      context.stroke();\n    }\n  }\n}\n","import type {\n  DisplayObject,\n  ParsedImageStyleProps,\n  GlobalRuntime,\n} from '@antv/g-lite';\nimport { ImagePool, type ImageCache } from '@antv/g-plugin-image-loader';\nimport { isNil } from '@antv/util';\nimport { mat4 } from 'gl-matrix';\nimport { transformRect, calculateOverlapRect } from '../../utils/math';\nimport { DefaultRenderer, setShadowAndFilter } from './Default';\nimport {\n  CanvasRendererPlugin,\n  type RenderState,\n} from '../../CanvasRendererPlugin';\n\nexport class ImageRenderer extends DefaultRenderer {\n  static renderFull(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n    data: {\n      image: HTMLImageElement;\n      drawRect: [number, number, number, number];\n    },\n  ) {\n    context.drawImage(\n      data.image,\n      Math.floor(data.drawRect[0]),\n      Math.floor(data.drawRect[1]),\n      Math.ceil(data.drawRect[2]),\n      Math.ceil(data.drawRect[3]),\n    );\n  }\n\n  private renderDownSampled(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n    data: {\n      src: string | HTMLImageElement;\n      imageCache: ImageCache;\n      drawRect: [number, number, number, number];\n    },\n  ) {\n    const { src, imageCache } = data;\n\n    if (!imageCache.downSampled) {\n      this.imagePool\n        .createDownSampledImage(src, object)\n        .then((res) => {\n          // rerender\n          // object.dirty();\n          object.renderable.dirty = true;\n          object.ownerDocument.defaultView.context.renderingService.dirtify();\n        })\n        .catch(() => {\n          //\n        });\n\n      return;\n    }\n\n    context.drawImage(\n      imageCache.downSampled,\n      Math.floor(data.drawRect[0]),\n      Math.floor(data.drawRect[1]),\n      Math.ceil(data.drawRect[2]),\n      Math.ceil(data.drawRect[3]),\n    );\n  }\n\n  renderTile(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n    data: {\n      src: string | HTMLImageElement;\n      imageCache: ImageCache;\n      imageRect: [number, number, number, number];\n      drawRect: [number, number, number, number];\n    },\n  ) {\n    const { src, imageCache, imageRect, drawRect } = data;\n    const { size: originalSize } = imageCache;\n    const { a, b, c, d, e, f } = context.getTransform();\n\n    context.resetTransform();\n\n    if (!imageCache?.gridSize) {\n      this.imagePool\n        .createImageTiles(\n          src,\n          [],\n          () => {\n            // rerender\n            // object.dirty();\n            object.renderable.dirty = true;\n            object.ownerDocument.defaultView.context.renderingService.dirtify();\n          },\n          object,\n        )\n        .catch(() => {\n          //\n        });\n\n      return;\n    }\n\n    const scaleToOrigin = [\n      originalSize[0] / imageRect[2],\n      originalSize[1] / imageRect[3],\n    ];\n    const scaledTileSize = [\n      imageCache.tileSize[0] / scaleToOrigin[0],\n      imageCache.tileSize[1] / scaleToOrigin[1],\n    ];\n    const [startTileX, endTileX] = [\n      Math.floor((drawRect[0] - imageRect[0]) / scaledTileSize[0]),\n      Math.ceil((drawRect[0] + drawRect[2] - imageRect[0]) / scaledTileSize[0]),\n    ];\n    const [startTileY, endTileY] = [\n      Math.floor((drawRect[1] - imageRect[1]) / scaledTileSize[1]),\n      Math.ceil((drawRect[1] + drawRect[3] - imageRect[1]) / scaledTileSize[1]),\n    ];\n\n    for (let tileY = startTileY; tileY <= endTileY; tileY++) {\n      for (let tileX = startTileX; tileX <= endTileX; tileX++) {\n        const item = imageCache.tiles[tileY][tileX];\n\n        if (item) {\n          const tileRect = [\n            Math.floor(imageRect[0] + item.tileX * scaledTileSize[0]),\n            Math.floor(imageRect[1] + item.tileY * scaledTileSize[1]),\n            Math.ceil(scaledTileSize[0]),\n            Math.ceil(scaledTileSize[1]),\n          ];\n\n          context.drawImage(\n            item.data,\n            tileRect[0],\n            tileRect[1],\n            tileRect[2],\n            tileRect[3],\n          );\n        }\n      }\n    }\n\n    context.setTransform(a, b, c, d, e, f);\n  }\n\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedImageStyleProps,\n    object: DisplayObject,\n  ) {\n    const {\n      x = 0,\n      y = 0,\n      width,\n      height,\n      src,\n      shadowColor,\n      shadowBlur,\n    } = parsedStyle;\n\n    const imageCache = this.imagePool.getImageSync(src, object);\n    const image = imageCache?.img;\n    let iw = width;\n    let ih = height;\n\n    if (!image) {\n      return;\n    }\n\n    iw ||= image.width;\n    ih ||= image.height;\n\n    const hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n    setShadowAndFilter(object, context, hasShadow);\n\n    // node-canvas will throw the following err:\n    // Error: Image given has not completed loading\n    try {\n      const { width: viewWidth, height: viewHeight } =\n        object.ownerDocument.defaultView.getContextService().getDomElement();\n\n      const currentTransform = context.getTransform();\n      const { a, b, c, d, e, f } = currentTransform;\n      // 构建 mat4 矩阵\n      // prettier-ignore\n      const transformMatrix = mat4.fromValues(\n          a, c, 0, 0,\n          b, d, 0, 0,\n          0, 0, 1, 0,\n          e, f, 0, 1,\n        );\n      const imageRect = transformRect([x, y, iw, ih], transformMatrix);\n      const drawRect = calculateOverlapRect(\n        [0, 0, viewWidth, viewHeight],\n        imageRect,\n      );\n\n      if (!drawRect) {\n        return;\n      }\n\n      if (\n        !object.ownerDocument.defaultView.getConfig()\n          .enableLargeImageOptimization\n      ) {\n        ImageRenderer.renderFull(context, parsedStyle, object, {\n          image,\n          drawRect: [x, y, iw, ih],\n        });\n\n        return;\n      }\n\n      const sizeOfOrigin = imageRect[2] / imageCache.size[0];\n\n      if (sizeOfOrigin < (imageCache.downSamplingRate || 0.5)) {\n        this.renderDownSampled(context, parsedStyle, object, {\n          src,\n          imageCache,\n          drawRect: [x, y, iw, ih],\n        });\n\n        return;\n      }\n\n      if (!ImagePool.isSupportTile) {\n        ImageRenderer.renderFull(context, parsedStyle, object, {\n          image,\n          drawRect: [x, y, iw, ih],\n        });\n\n        return;\n      }\n\n      this.renderTile(context, parsedStyle, object, {\n        src,\n        imageCache,\n        imageRect,\n        drawRect,\n      });\n    } catch {}\n  }\n\n  // ---\n\n  drawToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    renderState: RenderState,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    this.render(context, object.parsedStyle as ParsedImageStyleProps, object);\n  }\n}\n","import { vec3, mat4 } from 'gl-matrix';\n\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n */\nexport function isSamePoint(\n  point1: [number, number],\n  point2: [number, number],\n) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\n\nexport function calculateOverlapRect<\n  Rect extends [number, number, number, number],\n>(rect1: Rect, rect2: Rect): null | Rect {\n  const [x1, y1, w1, h1] = rect1;\n  const [x2, y2, w2, h2] = rect2;\n\n  // 计算重叠区域的左上角和右下角\n  const overlapLeft = Math.max(x1, x2);\n  const overlapTop = Math.max(y1, y2);\n  const overlapRight = Math.min(x1 + w1, x2 + w2);\n  const overlapBottom = Math.min(y1 + h1, y2 + h2);\n\n  if (overlapRight <= overlapLeft || overlapBottom <= overlapTop) {\n    return null;\n  }\n\n  return [\n    overlapLeft,\n    overlapTop,\n    overlapRight - overlapLeft,\n    overlapBottom - overlapTop,\n  ] as Rect;\n}\n\nexport function transformRect<Rect extends [number, number, number, number]>(\n  rect: Rect,\n  matrix: mat4,\n): Rect {\n  const tl = vec3.transformMat4(vec3.create(), [rect[0], rect[1], 0], matrix);\n  const tr = vec3.transformMat4(\n    vec3.create(),\n    [rect[0] + rect[2], rect[1], 0],\n    matrix,\n  );\n  const bl = vec3.transformMat4(\n    vec3.create(),\n    [rect[0], rect[1] + rect[3], 0],\n    matrix,\n  );\n  const br = vec3.transformMat4(\n    vec3.create(),\n    [rect[0] + rect[2], rect[1] + rect[3], 0],\n    matrix,\n  );\n\n  return [\n    Math.min(tl[0], tr[0], bl[0], br[0]),\n    Math.min(tl[1], tr[1], bl[1], br[1]),\n    Math.max(tl[0], tr[0], bl[0], br[0]) - Math.min(tl[0], tr[0], bl[0], br[0]),\n    Math.max(tl[1], tr[1], bl[1], br[1]) - Math.min(tl[1], tr[1], bl[1], br[1]),\n  ] as Rect;\n}\n","import {\n  type CSSRGB,\n  type CanvasContext,\n  type DisplayObject,\n  type GlobalRuntime,\n  type ParsedTextStyleProps,\n  type Rectangle,\n  CSSGradientValue,\n  Pattern,\n} from '@antv/g-lite';\nimport { isNil } from '@antv/util';\nimport {\n  DefaultRenderer,\n  applyFill,\n  applyStroke,\n  setShadowAndFilter,\n} from './Default';\nimport {\n  CanvasRendererPlugin,\n  type RenderState,\n} from '../../CanvasRendererPlugin';\n\nexport class TextRenderer extends DefaultRenderer {\n  render(\n    context: CanvasRenderingContext2D,\n    parsedStyle: ParsedTextStyleProps,\n    object: DisplayObject,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    // Trigger text geometry calculation.\n    object.getBounds();\n    const {\n      lineWidth = 1,\n      textAlign = 'start',\n      textBaseline = 'alphabetic',\n      lineJoin = 'miter',\n      miterLimit = 10,\n      letterSpacing = 0,\n      stroke,\n      fill,\n      fillRule,\n      fillOpacity = 1,\n      strokeOpacity = 1,\n      opacity = 1,\n      metrics,\n      x = 0,\n      y = 0,\n      dx,\n      dy,\n      shadowColor,\n      shadowBlur,\n    } = parsedStyle;\n\n    const { font, lines, height, lineHeight, lineMetrics } = metrics;\n\n    context.font = font;\n    context.lineWidth = lineWidth;\n    context.textAlign = textAlign === 'middle' ? 'center' : textAlign;\n\n    let formattedTextBaseline = textBaseline;\n    if (formattedTextBaseline === 'alphabetic') {\n      formattedTextBaseline = 'bottom';\n    }\n\n    context.lineJoin = lineJoin;\n    if (!isNil(miterLimit)) {\n      context.miterLimit = miterLimit;\n    }\n\n    let linePositionY = y;\n    // handle vertical text baseline\n    if (textBaseline === 'middle') {\n      linePositionY += -height / 2 - lineHeight / 2;\n    } else if (\n      textBaseline === 'bottom' ||\n      textBaseline === 'alphabetic' ||\n      textBaseline === 'ideographic'\n    ) {\n      linePositionY += -height;\n    } else if (textBaseline === 'top' || textBaseline === 'hanging') {\n      linePositionY += -lineHeight;\n    }\n\n    // account for dx & dy\n    const offsetX = x + (dx || 0);\n    linePositionY += dy || 0;\n\n    if (lines.length === 1) {\n      if (formattedTextBaseline === 'bottom') {\n        formattedTextBaseline = 'middle';\n        linePositionY -= 0.5 * height;\n      } else if (formattedTextBaseline === 'top') {\n        formattedTextBaseline = 'middle';\n        linePositionY += 0.5 * height;\n      }\n    }\n    context.textBaseline = formattedTextBaseline;\n\n    const hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n    setShadowAndFilter(object, context, hasShadow);\n\n    // draw lines line by line\n    for (let i = 0; i < lines.length; i++) {\n      const linePositionX = lineWidth / 2 + offsetX;\n      linePositionY += lineHeight;\n\n      // no need to re-position X, cause we already set text align\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\n      if (!isNil(stroke) && !(stroke as CSSRGB).isNone && lineWidth) {\n        this.drawLetterSpacing(\n          context,\n          object,\n          lines[i],\n          lineMetrics[i],\n          textAlign,\n          linePositionX,\n          linePositionY,\n          letterSpacing,\n          fill,\n          fillRule,\n          fillOpacity,\n          stroke,\n          strokeOpacity,\n          opacity,\n          true,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n      if (!isNil(fill)) {\n        this.drawLetterSpacing(\n          context,\n          object,\n          lines[i],\n          lineMetrics[i],\n          textAlign,\n          linePositionX,\n          linePositionY,\n          letterSpacing,\n          fill,\n          fillRule,\n          fillOpacity,\n          stroke,\n          strokeOpacity,\n          opacity,\n          false,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n    }\n  }\n\n  private drawLetterSpacing(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    text: string,\n    lineMetrics: Rectangle,\n    textAlign: CanvasTextAlign | 'middle',\n    x: number,\n    y: number,\n    letterSpacing: number,\n    fill: CSSRGB | CSSGradientValue[] | Pattern,\n    fillRule: 'nonzero' | 'evenodd',\n    fillOpacity: number | undefined,\n    stroke: CSSRGB | CSSGradientValue[] | Pattern,\n    strokeOpacity: number | undefined,\n    opacity: number | undefined,\n    isStroke: boolean,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ): void {\n    // letterSpacing of 0 means normal, render all texts directly\n    if (letterSpacing === 0) {\n      if (isStroke) {\n        this.strokeText(\n          context,\n          object,\n          text,\n          x,\n          y,\n          stroke,\n          strokeOpacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      } else {\n        this.fillText(\n          context,\n          object,\n          text,\n          x,\n          y,\n          fill,\n          fillRule,\n          fillOpacity,\n          opacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n      return;\n    }\n\n    // draw text using left align\n    const currentTextAlign = context.textAlign;\n    context.textAlign = 'left';\n\n    let currentPosition = x;\n    if (textAlign === 'center' || textAlign === 'middle') {\n      currentPosition = x - lineMetrics.width / 2;\n    } else if (textAlign === 'right' || textAlign === 'end') {\n      currentPosition = x - lineMetrics.width;\n    }\n\n    const stringArray = Array.from(text);\n    let previousWidth = context.measureText(text).width;\n    let currentWidth = 0;\n    for (let i = 0; i < stringArray.length; ++i) {\n      const currentChar = stringArray[i];\n      if (isStroke) {\n        this.strokeText(\n          context,\n          object,\n          currentChar,\n          currentPosition,\n          y,\n          stroke,\n          strokeOpacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      } else {\n        this.fillText(\n          context,\n          object,\n          currentChar,\n          currentPosition,\n          y,\n          fill,\n          fillRule,\n          fillOpacity,\n          opacity,\n          canvasContext,\n          plugin,\n          runtime,\n        );\n      }\n      currentWidth = context.measureText(text.substring(i + 1)).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n\n    context.textAlign = currentTextAlign;\n  }\n\n  private fillText(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    text: string,\n    x: number,\n    y: number,\n    fill: CSSRGB | CSSGradientValue[] | Pattern,\n    fillRule: 'nonzero' | 'evenodd',\n    fillOpacity: number | undefined,\n    opacity: number | undefined,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    applyFill(\n      context,\n      object,\n      fill,\n      fillRule,\n      canvasContext,\n      plugin,\n      runtime,\n      this.imagePool,\n      true,\n    );\n\n    let currentGlobalAlpha: number;\n    const applyOpacity = !isNil(fillOpacity) && fillOpacity !== 1;\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = fillOpacity * opacity;\n    }\n    context.fillText(text, x, y);\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  }\n\n  private strokeText(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    text: string,\n    x: number,\n    y: number,\n    stroke: CSSRGB | CSSGradientValue[] | Pattern,\n    strokeOpacity: number | undefined,\n    canvasContext: CanvasContext,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    applyStroke(\n      context,\n      object,\n      stroke,\n      canvasContext,\n      plugin,\n      runtime,\n      this.imagePool,\n      true,\n    );\n\n    let currentGlobalAlpha: number;\n    const applyOpacity = !isNil(strokeOpacity) && strokeOpacity !== 1;\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = strokeOpacity!;\n    }\n    context.strokeText(text, x, y);\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  }\n\n  // ---\n\n  drawToContext(\n    context: CanvasRenderingContext2D,\n    object: DisplayObject,\n    renderState: RenderState,\n    plugin: CanvasRendererPlugin,\n    runtime: GlobalRuntime,\n  ) {\n    this.render(\n      context,\n      object.parsedStyle as ParsedTextStyleProps,\n      object,\n      object.ownerDocument.defaultView.context,\n      plugin,\n      runtime,\n    );\n  }\n}\n","import { AbstractRendererPlugin, Shape } from '@antv/g-lite';\nimport type { PathGenerator } from '@antv/g-plugin-canvas-path-generator';\nimport { CanvasRendererPlugin } from './CanvasRendererPlugin';\nimport {\n  type StyleRenderer,\n  DefaultRenderer,\n  TextRenderer,\n  ImageRenderer,\n} from './shapes/styles';\nimport type { CanvasRendererPluginOptions } from './interfaces';\n\nexport * from './shapes/styles';\n\nexport class Plugin extends AbstractRendererPlugin<{\n  defaultStyleRendererFactory: Record<Shape, StyleRenderer>;\n  styleRendererFactory: Record<Shape, StyleRenderer>;\n  pathGeneratorFactory: Record<Shape, PathGenerator<any>>;\n}> {\n  name = 'canvas-renderer';\n\n  constructor(private options: Partial<CanvasRendererPluginOptions> = {}) {\n    super();\n  }\n\n  init(): void {\n    const canvasRendererPluginOptions: CanvasRendererPluginOptions = {\n      dirtyObjectNumThreshold: 500,\n      dirtyObjectRatioThreshold: 0.8,\n      ...this.options,\n    };\n\n    // @ts-ignore\n    const { imagePool } = this.context;\n\n    const defaultRenderer = new DefaultRenderer(imagePool);\n\n    const defaultStyleRendererFactory: Record<Shape, StyleRenderer> = {\n      [Shape.CIRCLE]: defaultRenderer,\n      [Shape.ELLIPSE]: defaultRenderer,\n      [Shape.RECT]: defaultRenderer,\n      [Shape.IMAGE]: new ImageRenderer(imagePool),\n      [Shape.TEXT]: new TextRenderer(imagePool),\n      [Shape.LINE]: defaultRenderer,\n      [Shape.POLYLINE]: defaultRenderer,\n      [Shape.POLYGON]: defaultRenderer,\n      [Shape.PATH]: defaultRenderer,\n      [Shape.GROUP]: undefined,\n      [Shape.HTML]: undefined,\n      [Shape.MESH]: undefined,\n      [Shape.FRAGMENT]: undefined,\n    };\n\n    this.context.defaultStyleRendererFactory = defaultStyleRendererFactory;\n    this.context.styleRendererFactory = defaultStyleRendererFactory;\n\n    this.addRenderingPlugin(\n      new CanvasRendererPlugin(canvasRendererPluginOptions),\n    );\n  }\n  destroy(): void {\n    this.removeAllRenderingPlugins();\n\n    delete this.context.defaultStyleRendererFactory;\n    delete this.context.styleRendererFactory;\n  }\n}\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","a","n","_defineProperties","key","_createClass","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_possibleConstructorReturn","ReferenceError","assertThisInitialized","_callSuper","possibleConstructorReturn","isNativeReflectConstruct","_setPrototypeOf","_inherits","create","_arrayLikeToArray","Array","_unsupportedIterableToArray","arrayLikeToArray","toString","slice","name","from","test","_slicedToArray","isArray","arrayWithHoles","l","u","f","next","done","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","arrayWithoutHoles","iterableToArray","nonIterableSpread","_classPrivateFieldBase","hasOwnProperty","id","_classPrivateFieldKey","ARRAY_TYPE","Float32Array","out","glMatrix.ARRAY_TYPE","copy","multiply","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","exactEquals","transformMat4","m","x","y","z","w","isNil","Math","hypot","sqrt","_renderState","_classPrivateFieldLooseKey","CanvasRendererPlugin","canvasRendererPluginOptions","this","removedRBushNodeAABBs","renderQueue","restoreStack","prevObject","currentContext","Map","clearFullScreenLastFrame","clearFullScreen","vpMatrix","mat4","dprMatrix","tmpMat4","vec3a","vec3","vec3b","vec3c","vec3d","context","runtime","_this","_this$context","config","camera","renderingService","renderingContext","rBushRoot","pathGeneratorFactory","enableRenderingOptimization","renderer","getConfig","enableDirtyCheck","enableDirtyRectangleRendering","rBush","contextService","canvas","root","ownerDocument","defaultView","handleUnmounted","rBushNode","target","aabb","handleCulled","hooks","init","tap","tag","addEventListener","ElementEvent","UNMOUNTED","CULLED","dpr","getDPR","width","height","getContext","clearRect","background","destroy","removeEventListener","_classPrivateFieldLooseBase","beginFrame","_canvas$context$rende","_this$canvasRendererP","dirtyObjectNumThreshold","dirtyObjectRatioThreshold","_renderingService$get","getStats","rendered","ratio","total","renderingPlugins","isFirstTimeRenderingFinished","disableDirtyRectangleRendering","resetTransform","setTransform","renderByZIndex","object","stack","currentObject","pop","isVisible","isCulled","renderDisplayObjectOptimized","renderDisplayObject","objects","sortable","sorted","childNodes","endFrame","clear","v","getOrthoMatrix","save","restore","dirtyRenderBounds","safeMergeAABB","mergeDirtyAABBs","concat","map","_ref","minX","minY","maxX","maxY","AABB","setMinMax","isEmpty","dirtyRect","convertAABB2Rect","tl","tr","bl","br","minx","min","miny","maxx","max","maxy","ix","floor","iy","iwidth","ceil","iheight","beginPath","rect","clip","enableDirtyRectangleRenderingDebug","dispatchEvent","CustomEvent","CanvasEvent","DIRTY_RECTANGLE","searchDirtyObjects","sort","renderOrder","saveDirtyAABB","render","fillStyle","fillRect","canvasContext","renderState","nodeName","clipDraw","styleRenderer","styleRendererFactory","generatePath","clipPath","parsedStyle","getWorldTransform","applyWorldTransform","closePath","forceUpdateStyle","prevNodeName","Shape","TEXT","IMAGE","applyStyleToContext","LINE","PATH","POLYLINE","drawToContext","renderable","dirty","parent","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINS","applyAttributesToContext","_ref2","stroke","fill","opacity","lineDash","lineDashOffset","setLineDash","globalAlpha","isNone","strokeStyle","attributes","getMin","getMax","dirtyObjects","renderBounds","getRenderBounds","add","dirtyRectangle","_dirtyRectangle$getMi2","_dirtyRectangle$getMa2","search","_ref3","displayObject","update","center","halfExtents","matrix","getLocalTransform","merged","_len","aabbs","_key","getPattern","pattern","plugin","imagePool","$offscreenCanvas","image","_parsedStyle","offscreenCanvas","offscreenCanvasCreator","getOrCreateCanvas","offscreenCanvasContext","getOrCreateContext","getOrCreatePatternSync","getGeometryBounds","dirtify","getColor","parsedColor","color","type","GradientType","LinearGradient","RadialGradient","bounds","getOrCreateGradient","_objectSpread","SHADOW_NUMBER_STYLE","STROKE_STYLE","DEFAULT_STYLE","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","globalCompositeOperation","strokeOpacity","lineWidth","lineCap","lineJoin","miterLimit","fillOpacity","defaultParsedStyle","updateContextIfNotHitCache","cache","prevValue","has","get","set","OptimizedDefaultRenderer","forceUpdate","prevStyle","style","blend","_style$lineWidth","hasFill","styleName","applyCommonStyleToContext","applyStrokeFillStyleToContext","hasShadow","hasFilter","onlyClearShadowFilter","undefined","oldFilter","indexOf","replace","trim","_object$parsedStyle","fillRule","resetStyle","gradient","_resetStyle","isPattern","_this2","_resetStyle2","_resetStyle3","_style$fill","_style$opacity","_style$fillOpacity","_style$strokeOpacity","_style$lineWidth2","hasStroke","isInnerShadow","shadowType","isFillTransparent","alpha","shouldDrawShadowWithStroke","originGlobalAlpha","applyShadowAndFilterStyleToContext","fillToContext","clearShadowAndFilterStyleForContext","clearShadowAndFilter","prevOpacity","originBlend","strokeToContext","DefaultRenderer","_OptimizedDefaultRend","_parsedStyle$opacity","_parsedStyle$fillOpac","_parsedStyle$strokeOp","_parsedStyle$lineWidt","setShadowAndFilter","applyFill","applyStroke","skipFill","skipStroke","ImageRenderer","_DefaultRenderer","data","src","imageCache","downSampled","drawImage","drawRect","createDownSampledImage","then","res","imageRect","originalSize","size","_context$getTransform","getTransform","c","d","gridSize","scaleToOrigin","scaledTileSize","tileSize","startTileX","endTileX","endTileY","tileY","tileX","item","tiles","tileRect","createImageTiles","_parsedStyle$x","_parsedStyle$y","getImageSync","img","iw","ih","rect2","_rect","x1","y1","w1","h1","_rect2","x2","y2","w2","h2","overlapLeft","overlapTop","overlapRight","overlapBottom","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","_object$ownerDocument","getContextService","getDomElement","viewWidth","viewHeight","currentTransform","transformMatrix","enableLargeImageOptimization","renderFull","downSamplingRate","renderDownSampled","ImagePool","isSupportTile","renderTile","_unused","TextRenderer","getBounds","_parsedStyle$textAlig","textAlign","_parsedStyle$textBase","textBaseline","_parsedStyle$lineJoin","_parsedStyle$miterLim","_parsedStyle$letterSp","letterSpacing","metrics","dx","dy","lines","lineHeight","lineMetrics","font","formattedTextBaseline","linePositionY","offsetX","linePositionX","drawLetterSpacing","text","isStroke","currentTextAlign","currentPosition","stringArray","previousWidth","measureText","currentWidth","currentChar","strokeText","fillText","substring","currentGlobalAlpha","applyOpacity","Plugin","_AbstractRendererPlug","options","_defaultStyleRenderer","defaultRenderer","defaultStyleRendererFactory","CIRCLE","ELLIPSE","RECT","POLYGON","GROUP","HTML","MESH","FRAGMENT","addRenderingPlugin","removeAllRenderingPlugins","AbstractRendererPlugin"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}